[{"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\index.js":"1","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\App.js":"2","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\route\\Router.js":"3","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\route\\MainNavbar.js":"4","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Login.js":"5","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Main.js":"6","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Join.js":"7","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\NewContent.js":"8","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\SearchMovie.js":"9","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Movies.js":"10","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\SearchBar.js":"11","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Favorite.js":"12","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\apis\\UserApiService.js":"13","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\apis\\TMDBMovieApiService.js":"14","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Row.js":"15","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\MoviesRow.js":"16","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\apis\\FavoriteMovieApiService.js":"17","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\DetailContent.js":"18","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Pagenation.js":"19","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\apis\\CommentApiService.js":"20","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Comments.js":"21"},{"size":280,"mtime":1648140132000,"results":"22","hashOfConfig":"23"},{"size":434,"mtime":1648140132000,"results":"24","hashOfConfig":"23"},{"size":1088,"mtime":1648140132000,"results":"25","hashOfConfig":"23"},{"size":3040,"mtime":1648140132000,"results":"26","hashOfConfig":"23"},{"size":3653,"mtime":1648140132000,"results":"27","hashOfConfig":"23"},{"size":4333,"mtime":1721375831157,"results":"28","hashOfConfig":"23"},{"size":3544,"mtime":1648140132000,"results":"29","hashOfConfig":"23"},{"size":2092,"mtime":1648140132000,"results":"30","hashOfConfig":"23"},{"size":8663,"mtime":1648140132000,"results":"31","hashOfConfig":"23"},{"size":2060,"mtime":1648140132000,"results":"32","hashOfConfig":"23"},{"size":3654,"mtime":1648140132000,"results":"33","hashOfConfig":"23"},{"size":2763,"mtime":1648140132000,"results":"34","hashOfConfig":"23"},{"size":372,"mtime":1648140132000,"results":"35","hashOfConfig":"23"},{"size":973,"mtime":1648140132000,"results":"36","hashOfConfig":"23"},{"size":6612,"mtime":1648140132000,"results":"37","hashOfConfig":"23"},{"size":1143,"mtime":1648140132000,"results":"38","hashOfConfig":"23"},{"size":678,"mtime":1648140132000,"results":"39","hashOfConfig":"23"},{"size":14816,"mtime":1648140132000,"results":"40","hashOfConfig":"23"},{"size":1881,"mtime":1648140132000,"results":"41","hashOfConfig":"23"},{"size":430,"mtime":1648140132000,"results":"42","hashOfConfig":"23"},{"size":1226,"mtime":1648140132000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1onlgjt",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\index.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\App.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\route\\Router.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\route\\MainNavbar.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Login.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Main.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Join.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\NewContent.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\SearchMovie.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Movies.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\SearchBar.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Favorite.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\apis\\UserApiService.js",["91"],"import Axios from \"axios\";\n\nconst API_URL = \"http://localhost:7777/user/v1\"; //spring boot back-end url\n\nclass UserApiService {\n  joinUser(user) {\n    return Axios.post(API_URL + \"/join\", user);\n  }\n  loginOk(user) {\n    return Axios.post(API_URL + \"/login\", user);\n  }\n  logoutOK() {\n    return Axios.get(API_URL + \"/logout\");\n  }\n}\n\nexport default new UserApiService();\n","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\apis\\TMDBMovieApiService.js",["92"],"import Axios from 'axios';\n// http://localhost:8080/api/movie/popular?page=1\nconst SPRING_API_URL = 'http://localhost:7777/api/v1/movie/';\n\nclass TMDBMovieApiService {\n  getGenreList(genre) {\n    return Axios.get(SPRING_API_URL + 'genre?genre=' + genre);\n  }\n  getDatasByGenre(genre) {\n    // console.log('Listed genre values:', genre);\n    return Axios.get(SPRING_API_URL + 'genre?genre=' + genre);\n  }\n  getYoutubeKey(id) {\n    return Axios.get(SPRING_API_URL + 'video?id=' + id);\n  }\n  getMovieDetails(id) {\n    return Axios.get(SPRING_API_URL + 'detail?id=' + id);\n  }\n  getCredits(id) {\n    return Axios.get(SPRING_API_URL + 'credits?id=' + id);\n  }\n  getSimilarMovies(id) {\n    return Axios.get(SPRING_API_URL + 'similar?id=' + id);\n  }\n  getAllMovies(page) {\n    return Axios.get(SPRING_API_URL + 'toprated?page=' + page);\n  }\n  getPopularMovies(page) {\n    return Axios.get(SPRING_API_URL + 'popular?page=' + page);\n  }\n}\n\nexport default new TMDBMovieApiService();\n","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Row.js",["93"],"import React, { useState } from 'react';\nimport Fade from 'react-reveal';\nimport Slider from \"react-slick\";\nimport DetailContent from './DetailContent';\nimport * as Icon from 'react-bootstrap-icons';\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst Row = ({\n  actions,\n  adventures,\n  comedys,\n  documentarys,\n  familys,\n  fantasys,\n  horrors,\n  populars,\n}) => {\n  //   console.log(\"props action value:\", actions);\n  //   console.log(\"props adventures:\", adventures);\n  // console.log('props comedys:', comedys);\n  // console.log('props documentarys:', documentarys);\n  // console.log('props familys:', familys);\n  // console.log('props fantasys:', fantasys);\n  // console.log('props horrors:', horrors);\n\n  const RightArrow = (props) => {\n    const { onClick } = props;\n  return (\n      <div\n        className='slick_button'\n        style={{ marginLeft: '99%' }}\n        onClick={onClick}\n      ><Icon.ChevronCompactRight style={{height: '100%'}} /></div>\n    );\n  }\n  \n  const LeftvArrow = (props) => {\n    const { onClick } = props;\n    return (\n      <div\n        className='slick_button'\n        onClick={onClick}\n      ><Icon.ChevronCompactLeft style={{height: '100%'}} /></div>\n    );\n  }\n  const settings = {  // Slider settings\n    infinite : true,\n    slidesToShow : 1,\n    slidesToScroll : 5,\n    variableWidth : true,\n    nextArrow: <RightArrow />,\n    prevArrow: <LeftvArrow />\n  };\n  return (\n    <div>\n      <Fade bottom>\n        <div className='rowStyle'>\n          <h3 className='titleFont'>Popular content</h3>\n          <div className=\"row\">\n            <div className='col'>\n              <Slider {...settings}>\n                {populars\n                  ? populars.map((item) => {\n                      return (\n                        <div className='slick'>\n                          <DetailContent id={item.id} movie={item}></DetailContent>\n                        </div>\n                      );\n                    })\n                  : ''}\n              </Slider>\n            </div>\n          </div>\n        </div>\n      </Fade>\n      <Fade bottom>\n        <div className='rowStyle'>\n          <h3 className='titleFont'>action</h3>\n          <div className=\"row\">\n            <div className='col'>\n              <Slider {...settings}>\n                {actions\n                  ? actions.map((item) => {\n                      return (\n                        <div className='slick'>\n                          <DetailContent id={item.id} movie={item}></DetailContent>\n                        </div>\n                      );\n                    })\n                  : ''}\n              </Slider>\n            </div>\n          </div>\n        </div>\n      </Fade>\n      <Fade bottom>\n        <div className='rowStyle'>\n          <h3 className='titleFont'>adventure</h3>\n          <div className=\"row\">\n            <div className='col'>\n              <Slider {...settings}>\n                {adventures\n                  ? adventures.map((item) => {\n                      return (\n                        <div className='slick'>\n                          <DetailContent id={item.id} movie={item}></DetailContent>\n                        </div>\n                      );\n                    })\n                  : ''}\n              </Slider>\n            </div>\n          </div>\n        </div>\n      </Fade>\n      <Fade bottom>\n        <div className='rowStyle'>\n          <h3 className='titleFont'>comedy</h3>\n          <div className=\"row\">\n            <div className='col'>\n              <Slider {...settings}>\n                {comedys\n                  ? comedys.map((item) => {\n                      return (\n                        <div className='slick'>\n                          <DetailContent id={item.id} movie={item}></DetailContent>\n                        </div>\n                      );\n                    })\n                  : ''}\n                </Slider>\n              </div>\n          </div>\n        </div>\n      </Fade>\n      <Fade bottom>\n        <div className='rowStyle'>\n          <h3 className='titleFont'>documentary</h3>\n          <div className=\"row\">\n            <div className='col'>\n              <Slider {...settings}>\n                {documentarys\n                  ? documentarys.map((item) => {\n                      return (\n                        <div className='slick'>\n                          <DetailContent id={item.id} movie={item}></DetailContent>\n                        </div>\n                      );\n                    })\n                  : ''}\n                </Slider>\n              </div>\n          </div>\n        </div>\n      </Fade>\n      <Fade bottom>\n        <div className='rowStyle'>\n          <h3 className='titleFont'>family movie</h3>\n          <div className=\"row\">\n            <div className='col'>\n              <Slider {...settings}>\n                {familys\n                  ? familys.map((item) => {\n                      return (\n                        <div className='slick'>\n                          <DetailContent id={item.id} movie={item}></DetailContent>\n                        </div>\n                      );\n                    })\n                  : ''}\n                </Slider>\n            </div>\n          </div>\n        </div>\n      </Fade>\n      <Fade bottom>\n        <div className='rowStyle'>\n          <h3 className='titleFont'>fantasy</h3>\n          <div className=\"row\">\n            <div className='col'>\n              <Slider {...settings}>\n                {fantasys\n                  ? fantasys.map((item) => {\n                      return (\n                        <div className='slick'>\n                          <DetailContent id={item.id} movie={item}></DetailContent>\n                        </div>\n                      );\n                    })\n                  : ''}\n                </Slider>\n              </div>\n          </div>\n        </div>\n      </Fade>\n      <Fade bottom>\n        <div className='rowStyle'>\n          <h3 className='titleFont'>horror</h3>\n          <div className=\"row\">\n            <div className='col'>\n              <Slider {...settings}>\n                {horrors\n                  ? horrors.map((item) => {\n                      return (\n                        <div className='slick'>\n                          <DetailContent id={item.id} movie={item}></DetailContent>\n                        </div>\n                      );\n                    })\n                  : ''}\n                </Slider>\n              </div>\n            </div>\n          </div>\n        </Fade>\n    </div>\n  );\n};\nexport default Row;\n","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\MoviesRow.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\apis\\FavoriteMovieApiService.js",["94"],"import Axios from 'axios';\n\nconst API_URL = 'http://localhost:7777/user/v1/mylist';\n\nclass FavoriteMovieApiService {\n    fetchMovie(userId) {\n        return Axios.get(API_URL + '/allmovies/' + userId);\n    }\n\n    // fetchMovie() {\n    //     return Axios.get(API_URL);\n    // }\n    \n    addMovie(movie) {\n        return Axios.post(API_URL+'/add', movie);\n    }\n    \n    removeMovie(id) {\n        return Axios.delete(API_URL + '/delete/' + id);\n    }\n\n    /*removeMovie2(movie_id) {\n        return Axios.delete(API_URL + '/' + movie_id);\n    }\n\n    isMovie(movie_id) {\n        return Axios.get(API_URL + '/' + movie_id);\n    }*/\n\n}\n\nexport default new FavoriteMovieApiService();\n","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\DetailContent.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Pagenation.js",[],"C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\apis\\CommentApiService.js",["95"],"import Axios from \"axios\";\n\nconst API_URL = \"http://localhost:7777/user/v1/comment\"; //spring boot back-end url\n\nclass CommentApiService {\n  writeMovieComment(comment) {\n    return Axios.post(API_URL + \"/write\", comment);\n  }\n  getCommentList(movie_id) {\n    return Axios.get(API_URL + \"/all/\" + movie_id);\n  }\n  deleteComment(id) {\n    return Axios.get(API_URL + \"/delete/=\" + id);\n  }\n}\n\nexport default new CommentApiService();\n","C:\\Users\\iamrw\\Downloads\\clonenetflix-main\\clonenetflix-main\\react-frontend\\src\\components\\Comments.js",[],{"ruleId":"96","severity":1,"message":"97","line":17,"column":1,"nodeType":"98","endLine":17,"endColumn":37},{"ruleId":"96","severity":1,"message":"97","line":33,"column":1,"nodeType":"98","endLine":33,"endColumn":42},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":32,"column":1,"nodeType":"98","endLine":32,"endColumn":46},{"ruleId":"96","severity":1,"message":"97","line":17,"column":1,"nodeType":"98","endLine":17,"endColumn":40},"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]